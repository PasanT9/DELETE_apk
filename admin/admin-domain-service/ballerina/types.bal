// AUTO-GENERATED FILE.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/constraint;
import ballerina/http;

public type AcceptedWorkflowResponse record {|
    *http:Accepted;
    WorkflowResponse body;
|};

public type NotAcceptableError record {|
    *http:NotAcceptable;
    Error body;
|};

public type NotFoundError record {|
    *http:NotFound;
    Error body;
|};

public type UnsupportedMediaTypeError record {|
    *http:UnsupportedMediaType;
    Error body;
|};

public type BadRequestError record {|
    *http:BadRequest;
    Error body;
|};

public type OkWorkflowInfo record {|
    *http:Ok;
    WorkflowInfo body;
|};

public type VHost record {
    @constraint:String {maxLength: 255, minLength: 1, pattern: re `^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$`}
    string host;
    @constraint:String {maxLength: 255}
    string httpContext?;
    int httpPort?;
    int httpsPort?;
    int wsPort?;
    int wssPort?;
};

public type Organization record {
    string id?;
    @constraint:String {maxLength: 255, minLength: 1}
    string name;
    @constraint:String {maxLength: 255, minLength: 1}
    string displayName;
    @constraint:String {maxLength: 255, minLength: 1}
    string organizationClaimValue?;
    boolean enabled = true;
    string[] serviceNamespaces = ["*"];
    WorkflowProperties[] workflows?;
    string[] production?;
    string[] sandbox?;
};

public type ErrorListItem record {
    # Error code
    string code;
    # Description about individual errors occurred
    string message;
};

public type BlockingConditionList record {
    # Number of Blocking Conditions returned.
    int count?;
    BlockingCondition[] list?;
};

public type CustomAttribute record {
    # Name of the custom attribute
    string name;
    # Value of the custom attribute
    string value;
};

public type APICategoryList record {
    # Number of API categories returned.
    int count?;
    APICategory[] list?;
};

public type ApplicationInfo record {
    string applicationId?;
    string name?;
    string owner?;
    string status?;
    string groupId?;
};

public type EnvironmentList record {
    # Number of Environments returned.
    int count?;
    Environment[] list?;
};

# Blocking Conditions
public type BlockingCondition record {
    # Id of the blocking condition
    string policyId?;
    # Type of the blocking condition
    "API"|"APPLICATION"|"IP"|"IPRANGE"|"USER" conditionType;
    # Value of the blocking condition
    record {} conditionValue;
    # Status of the blocking condition
    boolean conditionStatus?;
};

public type KeyManagerList record {
    # Number of Key managers returned.
    int count?;
    KeyManagerInfo[] list?;
};

public type WorkflowProperties record {
    "APPLICATION_CREATION"|"KEY_GENERATION"|"SUBSCRIPTION_CREATION"|"LIFECYCLE_CHANGE" name?;
    boolean enable?;
    string[] properties?;
};

# Blocking Conditions Status
public type BlockingConditionStatus record {
    # Id of the blocking condition
    string policyId?;
    # Status of the blocking condition
    boolean conditionStatus;
};

public type Pagination record {
    int offset?;
    int 'limit?;
    int total?;
    # Link to the next subset of resources qualified.
    # Empty if no more resources are to be returned.
    # example: ""
    string next?;
    # Link to the previous subset of resources qualified.
    # Empty if current subset is the first subset returned.
    # example: ""
    string previous?;
};

public type KeyManagerEndpoint record {
    string name;
    string value;
};

public type WorkflowList record {
    # Number of workflow processes returned.
    int count?;
    # Link to the next subset of resources qualified.
    # Empty if no more resources are to be returned.
    string next?;
    # Link to the previous subset of resources qualified.
    # Empty if current subset is the first subset returned.
    string previous?;
    WorkflowInfo[] list?;
};

public type ClaimMappingEntry record {
    string remoteClaim?;
    string localClaim?;
};

public type ApplicationList record {
    # Number of applications returned.
    int count?;
    ApplicationInfo[] list?;
    Pagination pagination?;
};

public type KeyManager record {
    string id?;
    @constraint:String {maxLength: 100, minLength: 1}
    string name;
    # display name of Key Manager to  show in UI
    @constraint:String {maxLength: 100}
    string displayName?;
    @constraint:String {maxLength: 45, minLength: 1}
    string 'type;
    @constraint:String {maxLength: 256}
    string description?;
    # Well-Known Endpoint of Identity Provider.
    string wellKnownEndpoint?;
    KeyManagerEndpoint[] endpoints?;
    KeyManager_signingCertificate signingCertificate?;
    # PEM type certificate
    string tlsCertificate?;
    string issuer;
    string[] availableGrantTypes?;
    boolean enableTokenGeneration = true;
    boolean enableMapOAuthConsumerApps = false;
    boolean enableOauthAppValidation = true;
    boolean enableOAuthAppCreation = true;
    string consumerKeyClaim?;
    string scopesClaim?;
    boolean enabled = true;
    record {} additionalProperties?;
};

public type PublishStatus record {
    # Status of the usage publish request
    string status?;
    # detailed message of the status
    string message?;
};

public type KeyManagerInfo record {
    string id?;
    string name;
    string 'type;
    string description?;
    boolean enabled?;
};

public type WorkflowInfo record {
    # Id of the Workflow Request.
    string workflowReferenceId?;
    # Type of the Workflow Request. It shows which type of request is it.
    "APPLICATION_CREATION"|"KEY_GENERATION"|"SUBSCRIPTION_CREATION"|"LIFECYCLE_CHANGE" workflowType?;
    # Show the Status of the the workflow request whether it is approved or created.
    "APPROVED"|"CREATED" workflowStatus?;
    string[] workflowProperties?;
    # Time of the the workflow request created.
    string createdTime?;
    # Time of the the workflow request updated.
    string updatedTime?;
    # description is a message with basic details about the workflow request.
    string description?;
};

public type Error record {
    # Error code
    int code;
    # Error message.
    string message;
    # A detail description about the error message.
    string description?;
    # Preferably an url with more details about the error.
    string moreInfo?;
    # If there are more than one error list them out.
    # For example, list out validation errors by each field.
    ErrorListItem[] 'error?;
};

public type ScopeInfo record {
    string 'key?;
    string name?;
    # Allowed roles for the scope
    string[] roles?;
    # Description of the scope
    string description?;
};

public type OrganizationList record {
    # Number of Organization returned.
    int count?;
    Organization[] list?;
};

public type GatewayEnvironmentProtocolURI record {
    string protocol;
    string endpointURI;
};

public type TokenValidation record {
    int id?;
    boolean enable?;
    "REFERENCE"|"JWT"|"CUSTOM" 'type?;
    record {} value?;
};

public type Environment record {
    string id?;
    @constraint:String {maxLength: 255, minLength: 1, pattern: re `^[a-zA-Z0-9_-]+$`}
    string name;
    @constraint:String {maxLength: 255, minLength: 1}
    string displayName?;
    string provider?;
    @constraint:String {maxLength: 1023}
    string description?;
    boolean isReadOnly?;
    @constraint:Array {minLength: 1}
    VHost[] vhosts;
    GatewayEnvironmentProtocolURI[] endpointURIs?;
    AdditionalProperty[] additionalProperties?;
};

public type WorkflowResponse record {
    # This attribute declares whether this workflow task is approved or rejected.
    "CREATED"|"APPROVED"|"REJECTED"|"REGISTERED" workflowStatus;
    # Attributes that returned after the workflow execution
    string jsonPayload?;
};

public type KeyManager_signingCertificate record {
    "JWKS"|"PEM" 'type?;
    string value?;
};

public type Application record {
    string applicationId?;
    string name?;
    string throttlingPolicy?;
    string description?;
    # Type of the access token generated for this application.
    # **OAUTH:** A UUID based access token which is issued by default.
    # **JWT:** A self-contained, signed JWT based access token. **Note:** This can be only used in Microgateway environments.
    "OAUTH"|"JWT" tokenType?;
    string status?;
    string[] groups?;
    int subscriptionCount?;
    record {|string...;|} attributes?;
    ScopeInfo[] subscriptionScopes?;
    # Application created user
    string owner?;
};

public type AdditionalProperty record {
    string 'key?;
    string value?;
};

public type APICategory record {
    string id?;
    @constraint:String {maxLength: 255, minLength: 1}
    string name;
    @constraint:String {maxLength: 1024}
    string description?;
    int numberOfAPIs?;
};
